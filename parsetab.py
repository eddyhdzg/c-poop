
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL COMMA CTE_BOOL CTE_F CTE_I CTE_STRING DEF DIVIDE ELSE EQUAL EQUALEQUAL FLOAT GT GTE ID IF INT LBRACE LOOP LPAREN LT LTE MAIN MINUS NOT NOTEQUAL OR PLUS PRINT PROGRAM RBRACE RETURN RPAREN SEMICOLON STRING TIMES VAR VOIDprogram : PROGRAM ID SEMICOLON main_dec bloque\n               | PROGRAM ID SEMICOLON vars main_dec bloque\n               | PROGRAM ID SEMICOLON programAux main_dec bloque\n               | PROGRAM ID SEMICOLON vars programAux main_dec bloqueprogramAux : funcion\n                  | funcion programAuxmain_dec : MAIN LPAREN RPARENvars : VAR varAux1varAux1 : tipo varAux2 SEMICOLON\n               | tipo varAux2 SEMICOLON varAux1varAux2 : ID\n               | ID COMMA varAux2\n               | ID EQUAL expresion\n               | ID EQUAL expresion COMMA varAux2tipo : INT\n            | FLOAT\n            | STRING\n            | BOOLbloque : LBRACE RBRACE\n              | LBRACE bloqueAux RBRACEbloqueAux : estatuto\n                 | estatuto bloqueAuxestatuto : asignacion\n                | condicion\n                | escritura\n                | loop\n                | func_callasignacion : ID EQUAL expresion SEMICOLONcondicion : IF LPAREN expresion RPAREN bloque SEMICOLON\n                 | IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLONescritura : PRINT LPAREN escrituraAux RPAREN SEMICOLONescrituraAux : expresion\n                    | expresion COMMA escrituraAuxexpresion : exp2\n                 | exp2 AND expresion\n                 | exp2 OR expresionexp2 : exp3\n            | exp3 LT exp3\n            | exp3 LTE exp3\n            | exp3 GT exp3\n            | exp3 GTE exp3\n            | exp3 EQUALEQUAL exp3\n            | exp3 NOTEQUAL exp3exp3 : termino\n            | termino PLUS exp3\n            | termino MINUS exp3termino : factor\n               | factor TIMES termino\n               | factor DIVIDE terminofactor : LPAREN expresion RPAREN\n              | factorAuxfactorAux : PLUS var_cte\n                 | MINUS var_cte\n                 | NOT var_cte\n                 | var_ctevar_cte : ID\n               | CTE_I\n               | CTE_BOOL\n               | CTE_F\n               | CTE_STRING\n               | func_call\n               loop : LOOP LPAREN expresion RPAREN bloque\n            | LOOP CTE_I bloquefuncion : DEF tipo funcionAux RETURN expresion SEMICOLON RBRACE\n               | DEF VOID funcionAux RBRACEfuncionAux : dec_func LBRACE\n                  | dec_func LBRACE vars\n                  | dec_func LBRACE funcionAux2\n                  | dec_func LBRACE vars funcionAux2funcionAux2 : estatuto\n                  | estatuto funcionAux2dec_func : ID LPAREN RPAREN\n                | ID LPAREN dec_func_aux RPARENdec_func_aux : tipo ID\n                    | tipo ID COMMA dec_func_auxfunc_call : ID LPAREN RPAREN SEMICOLON\n                 | ID LPAREN func_call_aux RPAREN SEMICOLONfunc_call_aux : expresion\n                     | expresion COMMA func_call_aux'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,27,39,41,49,57,],[0,-1,-19,-2,-3,-20,-4,]),'ID':([2,13,18,19,20,21,22,23,25,26,27,29,30,31,32,33,34,49,51,52,53,54,55,58,59,60,61,62,70,71,73,76,89,90,94,96,99,100,101,102,103,104,105,106,107,108,109,110,113,114,117,119,122,124,143,146,148,152,156,],[3,35,-8,44,-15,-16,-17,-18,47,47,-19,35,-23,-24,-25,-26,-27,-20,65,65,65,65,65,-9,44,65,65,35,65,65,65,65,-63,-10,35,35,129,-28,65,65,65,65,65,65,65,65,65,65,65,65,-76,65,65,44,-77,-31,-62,-29,-30,]),'SEMICOLON':([3,27,43,44,49,65,66,67,68,69,72,74,75,77,78,79,80,81,82,91,92,93,111,112,116,117,118,121,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,149,155,],[4,-19,58,-11,-20,-56,100,-34,-37,-44,-47,-51,-55,-57,-58,-59,-60,-61,117,-12,-13,125,-52,-53,-54,-76,143,146,-35,-36,-38,-39,-40,-41,-42,-43,-45,-46,-48,-49,-50,-77,152,-14,156,]),'MAIN':([4,6,7,10,15,18,24,58,64,90,150,],[8,8,8,-5,8,-8,-6,-9,-65,-10,-64,]),'VAR':([4,62,],[9,9,]),'DEF':([4,6,10,18,58,64,90,150,],[11,11,11,-8,-9,-65,-10,-64,]),'LBRACE':([5,14,16,40,42,46,56,97,120,123,128,153,],[13,13,13,13,-7,62,13,-72,13,13,-73,13,]),'LPAREN':([8,35,36,37,38,47,51,52,53,54,55,60,61,65,73,101,102,103,104,105,106,107,108,109,110,113,114,119,122,],[17,52,53,54,55,63,73,73,73,73,73,73,73,52,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'INT':([9,11,58,63,151,],[20,20,20,20,20,]),'FLOAT':([9,11,58,63,151,],[21,21,21,21,21,]),'STRING':([9,11,58,63,151,],[22,22,22,22,22,]),'BOOL':([9,11,58,63,151,],[23,23,23,23,23,]),'VOID':([11,],[26,]),'RBRACE':([13,18,27,28,29,30,31,32,33,34,48,49,50,58,62,89,90,94,95,96,100,117,125,126,127,143,146,148,152,156,],[27,-8,-19,49,-21,-23,-24,-25,-26,-27,64,-20,-22,-9,-66,-63,-10,-67,-68,-70,-28,-76,150,-69,-71,-77,-31,-62,-29,-30,]),'IF':([13,18,27,29,30,31,32,33,34,49,58,62,89,90,94,96,100,117,143,146,148,152,156,],[36,-8,-19,36,-23,-24,-25,-26,-27,-20,-9,36,-63,-10,36,36,-28,-76,-77,-31,-62,-29,-30,]),'PRINT':([13,18,27,29,30,31,32,33,34,49,58,62,89,90,94,96,100,117,143,146,148,152,156,],[37,-8,-19,37,-23,-24,-25,-26,-27,-20,-9,37,-63,-10,37,37,-28,-76,-77,-31,-62,-29,-30,]),'LOOP':([13,18,27,29,30,31,32,33,34,49,58,62,89,90,94,96,100,117,143,146,148,152,156,],[38,-8,-19,38,-23,-24,-25,-26,-27,-20,-9,38,-63,-10,38,38,-28,-76,-77,-31,-62,-29,-30,]),'RPAREN':([17,52,63,65,67,68,69,72,74,75,77,78,79,80,81,83,84,85,86,87,88,98,111,112,115,116,117,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,154,],[42,82,97,-56,-34,-37,-44,-47,-51,-55,-57,-58,-59,-60,-61,118,-78,120,121,-32,123,128,-52,-53,142,-54,-76,-74,-35,-36,-38,-39,-40,-41,-42,-43,-45,-46,-48,-49,-50,-77,-79,-33,-75,]),'RETURN':([18,27,30,31,32,33,34,45,49,58,62,89,90,94,95,96,100,117,126,127,143,146,148,152,156,],[-8,-19,-23,-24,-25,-26,-27,61,-20,-9,-66,-63,-10,-67,-68,-70,-28,-76,-69,-71,-77,-31,-62,-29,-30,]),'ELSE':([27,49,145,],[-19,-20,153,]),'EQUAL':([35,44,],[51,60,]),'CTE_I':([38,51,52,53,54,55,60,61,70,71,73,76,101,102,103,104,105,106,107,108,109,110,113,114,119,122,],[56,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'COMMA':([44,65,67,68,69,72,74,75,77,78,79,80,81,84,87,92,111,112,116,117,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,],[59,-56,-34,-37,-44,-47,-51,-55,-57,-58,-59,-60,-61,119,122,124,-52,-53,-54,-76,151,-35,-36,-38,-39,-40,-41,-42,-43,-45,-46,-48,-49,-50,-77,]),'PLUS':([51,52,53,54,55,60,61,65,69,72,73,74,75,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,119,122,140,141,142,143,],[70,70,70,70,70,70,70,-56,109,-47,70,-51,-55,-57,-58,-59,-60,-61,70,70,70,70,70,70,70,70,70,70,-52,-53,70,70,-54,-76,70,70,-48,-49,-50,-77,]),'MINUS':([51,52,53,54,55,60,61,65,69,72,73,74,75,77,78,79,80,81,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,119,122,140,141,142,143,],[71,71,71,71,71,71,71,-56,110,-47,71,-51,-55,-57,-58,-59,-60,-61,71,71,71,71,71,71,71,71,71,71,-52,-53,71,71,-54,-76,71,71,-48,-49,-50,-77,]),'NOT':([51,52,53,54,55,60,61,73,101,102,103,104,105,106,107,108,109,110,113,114,119,122,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'CTE_BOOL':([51,52,53,54,55,60,61,70,71,73,76,101,102,103,104,105,106,107,108,109,110,113,114,119,122,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'CTE_F':([51,52,53,54,55,60,61,70,71,73,76,101,102,103,104,105,106,107,108,109,110,113,114,119,122,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'CTE_STRING':([51,52,53,54,55,60,61,70,71,73,76,101,102,103,104,105,106,107,108,109,110,113,114,119,122,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'TIMES':([65,72,74,75,77,78,79,80,81,111,112,116,117,142,143,],[-56,113,-51,-55,-57,-58,-59,-60,-61,-52,-53,-54,-76,-50,-77,]),'DIVIDE':([65,72,74,75,77,78,79,80,81,111,112,116,117,142,143,],[-56,114,-51,-55,-57,-58,-59,-60,-61,-52,-53,-54,-76,-50,-77,]),'LT':([65,68,69,72,74,75,77,78,79,80,81,111,112,116,117,138,139,140,141,142,143,],[-56,103,-44,-47,-51,-55,-57,-58,-59,-60,-61,-52,-53,-54,-76,-45,-46,-48,-49,-50,-77,]),'LTE':([65,68,69,72,74,75,77,78,79,80,81,111,112,116,117,138,139,140,141,142,143,],[-56,104,-44,-47,-51,-55,-57,-58,-59,-60,-61,-52,-53,-54,-76,-45,-46,-48,-49,-50,-77,]),'GT':([65,68,69,72,74,75,77,78,79,80,81,111,112,116,117,138,139,140,141,142,143,],[-56,105,-44,-47,-51,-55,-57,-58,-59,-60,-61,-52,-53,-54,-76,-45,-46,-48,-49,-50,-77,]),'GTE':([65,68,69,72,74,75,77,78,79,80,81,111,112,116,117,138,139,140,141,142,143,],[-56,106,-44,-47,-51,-55,-57,-58,-59,-60,-61,-52,-53,-54,-76,-45,-46,-48,-49,-50,-77,]),'EQUALEQUAL':([65,68,69,72,74,75,77,78,79,80,81,111,112,116,117,138,139,140,141,142,143,],[-56,107,-44,-47,-51,-55,-57,-58,-59,-60,-61,-52,-53,-54,-76,-45,-46,-48,-49,-50,-77,]),'NOTEQUAL':([65,68,69,72,74,75,77,78,79,80,81,111,112,116,117,138,139,140,141,142,143,],[-56,108,-44,-47,-51,-55,-57,-58,-59,-60,-61,-52,-53,-54,-76,-45,-46,-48,-49,-50,-77,]),'AND':([65,67,68,69,72,74,75,77,78,79,80,81,111,112,116,117,132,133,134,135,136,137,138,139,140,141,142,143,],[-56,101,-37,-44,-47,-51,-55,-57,-58,-59,-60,-61,-52,-53,-54,-76,-38,-39,-40,-41,-42,-43,-45,-46,-48,-49,-50,-77,]),'OR':([65,67,68,69,72,74,75,77,78,79,80,81,111,112,116,117,132,133,134,135,136,137,138,139,140,141,142,143,],[-56,102,-37,-44,-47,-51,-55,-57,-58,-59,-60,-61,-52,-53,-54,-76,-38,-39,-40,-41,-42,-43,-45,-46,-48,-49,-50,-77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'main_dec':([4,6,7,15,],[5,14,16,40,]),'vars':([4,62,],[6,94,]),'programAux':([4,6,10,],[7,15,24,]),'funcion':([4,6,10,],[10,10,10,]),'bloque':([5,14,16,40,56,120,123,153,],[12,39,41,57,89,145,148,155,]),'varAux1':([9,58,],[18,90,]),'tipo':([9,11,58,63,151,],[19,25,19,99,99,]),'bloqueAux':([13,29,],[28,50,]),'estatuto':([13,29,62,94,96,],[29,29,96,96,96,]),'asignacion':([13,29,62,94,96,],[30,30,30,30,30,]),'condicion':([13,29,62,94,96,],[31,31,31,31,31,]),'escritura':([13,29,62,94,96,],[32,32,32,32,32,]),'loop':([13,29,62,94,96,],[33,33,33,33,33,]),'func_call':([13,29,51,52,53,54,55,60,61,62,70,71,73,76,94,96,101,102,103,104,105,106,107,108,109,110,113,114,119,122,],[34,34,81,81,81,81,81,81,81,34,81,81,81,81,34,34,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'varAux2':([19,59,124,],[43,91,149,]),'funcionAux':([25,26,],[45,48,]),'dec_func':([25,26,],[46,46,]),'expresion':([51,52,53,54,55,60,61,73,101,102,119,122,],[66,84,85,87,88,92,93,115,130,131,84,87,]),'exp2':([51,52,53,54,55,60,61,73,101,102,119,122,],[67,67,67,67,67,67,67,67,67,67,67,67,]),'exp3':([51,52,53,54,55,60,61,73,101,102,103,104,105,106,107,108,109,110,119,122,],[68,68,68,68,68,68,68,68,68,68,132,133,134,135,136,137,138,139,68,68,]),'termino':([51,52,53,54,55,60,61,73,101,102,103,104,105,106,107,108,109,110,113,114,119,122,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,140,141,69,69,]),'factor':([51,52,53,54,55,60,61,73,101,102,103,104,105,106,107,108,109,110,113,114,119,122,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'factorAux':([51,52,53,54,55,60,61,73,101,102,103,104,105,106,107,108,109,110,113,114,119,122,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'var_cte':([51,52,53,54,55,60,61,70,71,73,76,101,102,103,104,105,106,107,108,109,110,113,114,119,122,],[75,75,75,75,75,75,75,111,112,75,116,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'func_call_aux':([52,119,],[83,144,]),'escrituraAux':([54,122,],[86,147,]),'funcionAux2':([62,94,96,],[95,126,127,]),'dec_func_aux':([63,151,],[98,154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON main_dec bloque','program',5,'p_program','parser.py',111),
  ('program -> PROGRAM ID SEMICOLON vars main_dec bloque','program',6,'p_program','parser.py',112),
  ('program -> PROGRAM ID SEMICOLON programAux main_dec bloque','program',6,'p_program','parser.py',113),
  ('program -> PROGRAM ID SEMICOLON vars programAux main_dec bloque','program',7,'p_program','parser.py',114),
  ('programAux -> funcion','programAux',1,'p_programAux','parser.py',118),
  ('programAux -> funcion programAux','programAux',2,'p_programAux','parser.py',119),
  ('main_dec -> MAIN LPAREN RPAREN','main_dec',3,'p_main_dec','parser.py',123),
  ('vars -> VAR varAux1','vars',2,'p_vars','parser.py',127),
  ('varAux1 -> tipo varAux2 SEMICOLON','varAux1',3,'p_varAux1','parser.py',131),
  ('varAux1 -> tipo varAux2 SEMICOLON varAux1','varAux1',4,'p_varAux1','parser.py',132),
  ('varAux2 -> ID','varAux2',1,'p_varAux2','parser.py',136),
  ('varAux2 -> ID COMMA varAux2','varAux2',3,'p_varAux2','parser.py',137),
  ('varAux2 -> ID EQUAL expresion','varAux2',3,'p_varAux2','parser.py',138),
  ('varAux2 -> ID EQUAL expresion COMMA varAux2','varAux2',5,'p_varAux2','parser.py',139),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',143),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',144),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',145),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',146),
  ('bloque -> LBRACE RBRACE','bloque',2,'p_bloque','parser.py',150),
  ('bloque -> LBRACE bloqueAux RBRACE','bloque',3,'p_bloque','parser.py',151),
  ('bloqueAux -> estatuto','bloqueAux',1,'p_bloqueAux','parser.py',155),
  ('bloqueAux -> estatuto bloqueAux','bloqueAux',2,'p_bloqueAux','parser.py',156),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',160),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser.py',161),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser.py',162),
  ('estatuto -> loop','estatuto',1,'p_estatuto','parser.py',163),
  ('estatuto -> func_call','estatuto',1,'p_estatuto','parser.py',164),
  ('asignacion -> ID EQUAL expresion SEMICOLON','asignacion',4,'p_asignacion','parser.py',168),
  ('condicion -> IF LPAREN expresion RPAREN bloque SEMICOLON','condicion',6,'p_condicion','parser.py',172),
  ('condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMICOLON','condicion',8,'p_condicion','parser.py',173),
  ('escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON','escritura',5,'p_escritura','parser.py',177),
  ('escrituraAux -> expresion','escrituraAux',1,'p_escrituraAux','parser.py',181),
  ('escrituraAux -> expresion COMMA escrituraAux','escrituraAux',3,'p_escrituraAux','parser.py',182),
  ('expresion -> exp2','expresion',1,'p_expresion','parser.py',186),
  ('expresion -> exp2 AND expresion','expresion',3,'p_expresion','parser.py',187),
  ('expresion -> exp2 OR expresion','expresion',3,'p_expresion','parser.py',188),
  ('exp2 -> exp3','exp2',1,'p_exp2','parser.py',192),
  ('exp2 -> exp3 LT exp3','exp2',3,'p_exp2','parser.py',193),
  ('exp2 -> exp3 LTE exp3','exp2',3,'p_exp2','parser.py',194),
  ('exp2 -> exp3 GT exp3','exp2',3,'p_exp2','parser.py',195),
  ('exp2 -> exp3 GTE exp3','exp2',3,'p_exp2','parser.py',196),
  ('exp2 -> exp3 EQUALEQUAL exp3','exp2',3,'p_exp2','parser.py',197),
  ('exp2 -> exp3 NOTEQUAL exp3','exp2',3,'p_exp2','parser.py',198),
  ('exp3 -> termino','exp3',1,'p_exp3','parser.py',202),
  ('exp3 -> termino PLUS exp3','exp3',3,'p_exp3','parser.py',203),
  ('exp3 -> termino MINUS exp3','exp3',3,'p_exp3','parser.py',204),
  ('termino -> factor','termino',1,'p_termino','parser.py',208),
  ('termino -> factor TIMES termino','termino',3,'p_termino','parser.py',209),
  ('termino -> factor DIVIDE termino','termino',3,'p_termino','parser.py',210),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','parser.py',214),
  ('factor -> factorAux','factor',1,'p_factor','parser.py',215),
  ('factorAux -> PLUS var_cte','factorAux',2,'p_factorAux','parser.py',219),
  ('factorAux -> MINUS var_cte','factorAux',2,'p_factorAux','parser.py',220),
  ('factorAux -> NOT var_cte','factorAux',2,'p_factorAux','parser.py',221),
  ('factorAux -> var_cte','factorAux',1,'p_factorAux','parser.py',222),
  ('var_cte -> ID','var_cte',1,'p_var_cte','parser.py',226),
  ('var_cte -> CTE_I','var_cte',1,'p_var_cte','parser.py',227),
  ('var_cte -> CTE_BOOL','var_cte',1,'p_var_cte','parser.py',228),
  ('var_cte -> CTE_F','var_cte',1,'p_var_cte','parser.py',229),
  ('var_cte -> CTE_STRING','var_cte',1,'p_var_cte','parser.py',230),
  ('var_cte -> func_call','var_cte',1,'p_var_cte','parser.py',231),
  ('loop -> LOOP LPAREN expresion RPAREN bloque','loop',5,'p_loop','parser.py',236),
  ('loop -> LOOP CTE_I bloque','loop',3,'p_loop','parser.py',237),
  ('funcion -> DEF tipo funcionAux RETURN expresion SEMICOLON RBRACE','funcion',7,'p_funcion','parser.py',241),
  ('funcion -> DEF VOID funcionAux RBRACE','funcion',4,'p_funcion','parser.py',242),
  ('funcionAux -> dec_func LBRACE','funcionAux',2,'p_funcionAux','parser.py',246),
  ('funcionAux -> dec_func LBRACE vars','funcionAux',3,'p_funcionAux','parser.py',247),
  ('funcionAux -> dec_func LBRACE funcionAux2','funcionAux',3,'p_funcionAux','parser.py',248),
  ('funcionAux -> dec_func LBRACE vars funcionAux2','funcionAux',4,'p_funcionAux','parser.py',249),
  ('funcionAux2 -> estatuto','funcionAux2',1,'p_funcionAux2','parser.py',253),
  ('funcionAux2 -> estatuto funcionAux2','funcionAux2',2,'p_funcionAux2','parser.py',254),
  ('dec_func -> ID LPAREN RPAREN','dec_func',3,'p_dec_func','parser.py',258),
  ('dec_func -> ID LPAREN dec_func_aux RPAREN','dec_func',4,'p_dec_func','parser.py',259),
  ('dec_func_aux -> tipo ID','dec_func_aux',2,'p_dec_func_aux','parser.py',263),
  ('dec_func_aux -> tipo ID COMMA dec_func_aux','dec_func_aux',4,'p_dec_func_aux','parser.py',264),
  ('func_call -> ID LPAREN RPAREN SEMICOLON','func_call',4,'p_func_call','parser.py',268),
  ('func_call -> ID LPAREN func_call_aux RPAREN SEMICOLON','func_call',5,'p_func_call','parser.py',269),
  ('func_call_aux -> expresion','func_call_aux',1,'p_func_call_aux','parser.py',273),
  ('func_call_aux -> expresion COMMA func_call_aux','func_call_aux',3,'p_func_call_aux','parser.py',274),
]
